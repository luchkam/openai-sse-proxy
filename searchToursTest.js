const axios = require('axios');

async function searchToursTest(payload) {
  const {
    departure,
    country,
    datefrom,
    dateto,
    nightsfrom,
    nightsto,
    adults,
    child
  } = payload;

  const searchParams = {
    format: 'json',
    departure,
    country,
    datefrom,
    dateto,
    nightsfrom,
    nightsto,
    adults,
    child: child || 0,
    authlogin: 'info@meridiantt.com',
    authpass: 'Mh4GdKPUtwZT'
  };

  console.log('üîß –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Tourvisor:', searchParams);

  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º requestid
    const { data } = await axios.get('https://tourvisor.ru/xml/search.php', {
      params: searchParams
    });

    console.log('üì© –û—Ç–≤–µ—Ç –æ—Ç Tourvisor (search.php):', JSON.stringify(data));

    const requestid = data.requestid;
    if (!requestid) {
      console.log('‚ùå RequestID –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
      throw new Error('–ù–µ –ø–æ–ª—É—á–µ–Ω requestid');
    }

    // 2. –ñ–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞
    for (let i = 0; i < 6; i++) {
      const res = await axios.get('https://tourvisor.ru/xml/result.php', {
        params: {
          requestid,
          format: 'json',
          authlogin: searchParams.authlogin,
          authpass: searchParams.authpass
        }
      });

      if (
        res.data.status?.state === 'finished' &&
        res.data.result?.hotel?.length > 0
      ) {
        console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Ç—É—Ä–æ–≤:', res.data.result.hotel.length);
        return res.data.result.hotel.slice(0, 3); // —Ç–æ–ø-3 –æ—Ç–µ–ª—è
      }

      console.log(`‚è≥ –ü–æ–ø—ã—Ç–∫–∞ ${i + 1}: –ø–æ–∏—Å–∫ –Ω–µ –∑–∞–≤–µ—Ä—à—ë–Ω...`);
      await new Promise((r) => setTimeout(r, 2000)); // –ñ–¥—ë–º 2 —Å–µ–∫
    }

    return { error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ –∑–∞ 12 —Å–µ–∫—É–Ω–¥' };
  } catch (error) {
    console.log('üí• –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –ø–æ–∏—Å–∫–∞:', error.message);
    return { error: error.message };
  }
}

module.exports = { searchToursTest };
