// searchToursTest.js
const axios = require('axios');

async function searchTours(payload) {
  const { departure, country, datefrom, dateto, nightsfrom, nightsto, adults, child } = payload;

  const searchParams = {
    format: 'json',
    departure,
    country,
    datefrom,
    dateto,
    nightsfrom,
    nightsto,
    adults,
    child: child || 0,
    authlogin: 'info@meridiantt.com',
    authpass: 'Mh4GdKPUtwZT'
  };

  console.log('üì§ –¢–µ—Å—Ç–æ–≤—ã–π payload:', payload);
  console.log('üîß –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ Tourvisor:', searchParams);

  try {
    // –ü–æ–ª—É—á–µ–Ω–∏–µ requestid
    const { data: searchResponse } = await axios.get('https://tourvisor.ru/xml/search.php', { params: searchParams });
    console.log('üì© –û—Ç–≤–µ—Ç –æ—Ç Tourvisor (search.php):', searchResponse);

    const requestid = searchResponse?.result?.requestid;
    if (!requestid) {
      console.error('‚ùå RequestID –Ω–µ –ø–æ–ª—É—á–µ–Ω');
      return { error: '–ù–µ –ø–æ–ª—É—á–µ–Ω requestid' };
    }

    for (let i = 1; i <= 6; i++) {
      await new Promise(r => setTimeout(r, 2000));
      const resultParams = {
        requestid,
        format: 'json',
        authlogin: searchParams.authlogin,
        authpass: searchParams.authpass
      };
      const { data: resultResponse } = await axios.get('https://tourvisor.ru/xml/result.php', { params: resultParams });
      const status = resultResponse?.status?.state;
      const hotels = resultResponse?.result?.hotel || [];

      console.log(`‚è±Ô∏è –ü–æ–ø—ã—Ç–∫–∞ ${i} ‚Äî —Å—Ç–∞—Ç—É—Å: ${status}, –Ω–∞–π–¥–µ–Ω–æ –æ—Ç–µ–ª–µ–π: ${hotels.length}`);

      if (status === 'finished' && hotels.length > 0) {
        return hotels.slice(0, 3);
      }
    }

    return { error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ –∑–∞ 12 —Å–µ–∫—É–Ω–¥' };
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ –≤ searchToursTest:', error.message);
    return { error: error.message };
  }
}

module.exports = { searchTours };
